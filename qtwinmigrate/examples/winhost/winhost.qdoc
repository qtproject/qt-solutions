/****************************************************************************
**
** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
** Contact: https://www1.qt.io/terms-conditions
**
** This file is part of the Qt Solutions component.
**
** $QT_BEGIN_LICENSE:BSD$
** You may use this file under the terms of the BSD license as follows:
**
** "Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of Digia Plc and its Subsidiary(-ies) nor the names
**     of its contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*! \page winmigrate-win32-in-qt-example.html
    \title Qt Application using Win32 Windows

    This examples shows how to use the QWinHost class to use a native Win32
    window inside a Qt based user interface.

    \quotefromfile winhost/main.cpp
    \skipto class HostWindow

    \printto signals:
    The HostWindow class is a subclass of QWinHost and reimplements the
    virtual function QWinHost::createWindow() to register a Win32 window 
    class using the RegisterClassEx API, and to create a window using the 
    CreateWindow API. Note that the UNICODE version of all Win32 APIs is
    used.

    \printto protected:
    The class implements a signal \c message to report status changes.

    \printto if (window) switch
    The static \c WndProc function implements the message handling of the
    Win32 window. Since the method is static we have to use QWidget::find()
    to get the QWidget object for the window handle. Since we want to use
    the signal of the HostWindow class, which is the parent window of the
    native Win32 window, we have to cast the QWidget pointer to HostWindow,
    which is safe when using qobject_cast().

    \printuntil };
    The message is then handled in the switch statement. Unhandled messages 
    are passed on to the default window procedure.

    \printuntil }
    The \c main function creates a standard Qt user interface using 
    QMainWindow. The main window's central widget contains a
    QLineEdit as well as the HostWindow. Messages sent by the HostWindow
    object are displayed in the main window's default statusbar.
*/
